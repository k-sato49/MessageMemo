package com.example.MessageMemo;	
	
import java.sql.Timestamp;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;



@Controller 	
public class MessageController {	
	@Autowired	// This means to get the bean called CustomerRepository
	// Which is auto-generated by Spring, we will use it to handle the data
private CustomerRepository customerRepository;
	@Autowired
private EmployeeRepository employeeRepository;
	@Autowired
private MessageRepository messageRepository;
	
 
	@RequestMapping("/msgmemo/inputForm")
    
		public String memo(Model model) {
			// M_CUSTOMERテーブルの全データを取得
			Iterable<Customer> customerList = customerRepository.findAll();
			
			// モデルに属性追加
			model.addAttribute("customerlist",customerList);
			
			Iterable<Employee> employeeList = employeeRepository.findAll();
			
			// モデルに属性追加
			model.addAttribute("employeelist",employeeList);
			return "memo";
		}
	@PostMapping(path="/")
	public @ResponseBody String addNewMessage(	  @RequestParam int m_id
												, @RequestParam String to_name
												, @RequestParam String receiver_cd
												, @RequestParam Timestamp receiver_time
												, @RequestParam String custmer_cd
												, @RequestParam String sender
												, @RequestParam String message_cd
												, @RequestParam String memo) {
		
		Message messageAddData = new Message();
		messageAddData.setAll(m_id,to_name,receiver_cd,receiver_time,custmer_cd,sender,message_cd,memo);
		
		Timestamp timestamp = new Timestamp(System.currentTimeMillis());
		messageAddData.setCreate_date(timestamp);
		messageAddData.setCreate_user("auto_system");
		messageAddData.setUpdate_date(timestamp);
		messageAddData.setUpdate_user("auto_system");
		
		messageRepository.save(messageAddData);
		
		return memo;
	}
       	
	}	
	
	
	
